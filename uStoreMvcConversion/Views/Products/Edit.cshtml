@model UStore.data1.EF.Product

@{
    ViewBag.Title = "Edit Product";
}

<div id="mainContent">
    <h2 class="text-center">@ViewBag.Title</h2>
    @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ProductID)
            @Html.HiddenFor(model => model.ProductImage)
            <div class="form-group row">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="control-label col-md-2 text-right">Select an image to change:</label>
                <div class="col-md-10">
                    <input type="file" name="productImage" style="margin-bottom:.5em;" /><br />
                    <label class="control-label col-md-2 text-right">Existing Image:</label><br />
                    <img src="~/Content/img/product/@Model.ProductImage" alt="@Model.Name" style="width:50%;" />
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.UnitsInStock, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UnitsInStock, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UnitsInStock, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductImage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group row">
                @Html.LabelFor(model => model.StatusId, "StatusId", htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.ReferenceURL, htmlAttributes: new { @class = "control-label col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ReferenceURL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReferenceURL, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }

            <div id="detailsFooterLeft">
                <input type="submit" value="Save" class="btn btn-warning" />
            </div>
            <div id="detailsFooterRight">
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger pull-right" })
            </div>
            <div id="detailsClear"></div>
        
    </div>